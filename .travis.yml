# Run unit tests and build Linux wheels with manylinux.
# See: https://github.com/pypa/manylinux

dist: xenial

language: python

install:
  - pip3 install pytest
  - pip3 install .

python:
  - 3.4
  - 3.5
  - 3.6
  - 3.7
  - 3.8-dev

script:
  - pytest

jobs:
  include:
    - name: "manylinux x86-64"
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
           DEPLOY=1
      install:
        - docker pull $DOCKER_IMAGE
      script:
        - docker run --rm -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/.travis/build-linux-wheels.sh
        - ls wheelhouse/
    - name: "manylinux i686"
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_i686
           PRE_CMD=linux32
           DEPLOY=1
      install:
        - docker pull $DOCKER_IMAGE
      script:
        - docker run --rm -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/.travis/build-linux-wheels.sh
        - ls wheelhouse/



# Upload build artifacts to Google Cloud Storage for tagged releases.
# For GCS deployment documentation, see: https://docs.travis-ci.com/user/deployment/gcs/
# The keys are stored in the repository settings.
# See: https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings
deploy:
  provider: gcs
  access_key_id: "$GOOGLE_ACCESS_KEY"
  secret_access_key: "$GOOGLE_SECRET_KEY"
  bucket: "$GOOGLE_BUCKET_NAME"
  local_dir: wheelhouse
  skip_cleanup: true
  acl: public-read
  on:
    repo: python/typed_ast
    tags: true
    condition: $DEPLOY = 1  # Don't deploy on pytest matrix, only on docker jobs
